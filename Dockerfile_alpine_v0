ARG cache=0
FROM alpine:3.21
#https://github.com/erseco/alpine-php-webserver

#USER root
RUN apk add --no-cache composer

RUN addgroup vivek_group
RUN adduser -D -g vivek_group -u 1001 vivek

#USER root

#RUN chmod -R 777 /.composer
#USER nobody
#RUN composer install --optimize-autoloader --no-interaction --no-progress

# Install packages
RUN apk --no-cache add \
        php82 \
        php82-fpm \
        php82-opcache \
        php82-pecl-apcu \
        php82-mysqli \
        php82-pgsql \
        php82-json \
        php82-openssl \
        php82-curl \
        php82-zlib \
        php82-soap \
        php82-xml \
        php82-fileinfo \
        php82-phar \
        php82-intl \
        php82-dom \
        php82-xmlreader \
        php82-ctype \
        php82-session \
        php82-iconv \
        php82-tokenizer \
        php82-zip \
        php82-simplexml \
        php82-mbstring \
        php82-gd \
        php82-dom \
        nginx \
        supervisor \
        runit \
        curl \
    && apk add --no-cache --virtual .gettext gettext \
    && mv /usr/bin/envsubst /tmp/ \
    && runDeps="$( \
        scanelf --needed --nobanner /tmp/envsubst \
            | awk '{ gsub(/,/, "\nso:", $2); print "so:" $2 }' \
            | sort -u \
            | xargs -r apk info --installed \
            | sort -u \
    )" \
    && apk add --no-cache $runDeps \
    && apk del .gettext \
    && mv /tmp/envsubst /usr/local/bin/ \
# Remove alpine cache
    && rm -rf /var/cache/apk/* \
# Remove default server definition
    && rm /etc/nginx/http.d/default.conf \
    && mkdir -p /run /var/lib/nginx /var/www/html /var/log/nginx \
    && chown -R nobody:nobody /run /var/lib/nginx /var/www/html /var/log/nginx
RUN ln -s /usr/local/bin/php82 /usr/local/bin/php


ARG cache=3
# Add configuration files
COPY --chown=nobody rootfs/ /
COPY ./app_deploy.sh /var/www/app_deploy.sh
RUN ["chmod", "+x", "/var/www/app_deploy.sh"]

USER nobody
WORKDIR /var/www/html
EXPOSE 8080

ENTRYPOINT ["/bin/docker-entrypoint.sh"]
CMD [ "sh", "/var/www/app_deploy.sh" ]

# Configure a healthcheck to validate that everything is up&running
HEALTHCHECK --timeout=10s CMD curl --silent --fail http://127.0.0.1:8080/fpm-ping || exit 1

ENV nginx_root_directory=/var/www/html \
    client_max_body_size=2M \
    clear_env=no \
    allow_url_fopen=On \
    allow_url_include=Off \
    display_errors=Off \
    file_uploads=On \
    max_execution_time=0 \
    max_input_time=-1 \
    max_input_vars=1000 \
    memory_limit=128M \
    post_max_size=8M \
    upload_max_filesize=2M \
    zlib_output_compression=On \
    date_timezone=UTC \
    intl_default_locale=en_US